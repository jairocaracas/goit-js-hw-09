{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,GADOC,SAASC,cAAc,SACtBD,SAASC,cAAc,wBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBA+BtC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUS,MAAAR,IAGpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAzCQN,SAASC,cAAc,yBAE/Bc,iBAAiB,SAExB,SAAuBC,GAGrB,GAFAA,EAAEC,iBAEElB,EAAMmB,OAAS,GAAKhB,EAAKgB,OAAS,GAAKf,EAAOe,OAAS,EACzDC,EAAAtB,GAASuB,OAAOC,QACd,gEAGF,IAAKC,EAAI,EAAGA,EAAIC,OAAOpB,EAAOe,OAAQI,IAAK,CACzC,IAAIE,EAAiBD,OAAOxB,EAAMmB,OAASI,EAAIC,OAAOrB,EAAKgB,OAC3Dd,EAAckB,EAAI,EAAGE,GAClBC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALZ,MACjBK,EAAAtB,GAASuB,OAAOQ,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANF,EAAM,OAEhDG,QAAQC,IAAI,uBAAwCF,OAAfxB,EAAS,QAAYwB,OAANF,EAAM,M,IAE3DK,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAU4B,EAAKP,EAALZ,MAClBK,EAAAtB,GAASuB,OAAOc,QACd,sBAAuCL,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,OAE/CH,QAAQC,IAAI,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst submit = document.querySelector('button[type=\"submit\"]');\n\nsubmit.addEventListener('click', submitPromise);\n\nfunction submitPromise(e) {\n  e.preventDefault();\n\n  if (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    Notiflix.Notify.warning(\n      'Por favor ingrese un valor correcto en todos los campos'\n    );\n  } else {\n    for (i = 0; i < Number(amount.value); i++) {\n      let delayIncresing = Number(delay.value) + i * Number(step.value);\n      createPromise(i + 1, delayIncresing)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","value","$parcel$interopDefault","Notify","warning","i","Number","delayIncresing","then","param","delay1","success","concat","console","log","catch","delay2","failure"],"version":3,"file":"03-promises.298981fe.js.map"}