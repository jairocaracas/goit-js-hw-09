{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAApC,MACMC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBA+BtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAGpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAzCEP,SAASC,cAAc,yBAE/Be,iBAAiB,SAExB,SAAuBC,GAGrB,GAFAA,EAAEC,iBAEEhB,EAAMiB,OAAS,GAAKhB,EAAKgB,OAAS,GAAKf,EAAOe,OAAS,EACzDC,EAAAtB,GAASuB,OAAOC,QACd,gEAGF,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOpB,EAAOe,OAAQI,IAAK,CAC7C,IAAIE,EAAiBD,OAAOtB,EAAMiB,OAASI,EAAIC,OAAOrB,EAAKgB,OAC3Dd,EAAckB,EAAI,EAAGE,GAClBC,MAAK,EAACpB,SAAEA,EAAUS,MAAAY,MACjBP,EAAAtB,GAASuB,OAAOO,QACd,uBAAqBtB,QAAiBqB,OAExCE,QAAQC,IAAI,uBAAqBxB,QAAiBqB,MAAU,IAE7DI,OAAM,EAACzB,SAAEA,EAAUS,MAAAiB,MAClBZ,EAAAtB,GAASuB,OAAOY,QACd,sBAAoB3B,QAAiB0B,OAEvCH,QAAQC,IAAI,sBAAoBxB,QAAe0B,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst submit = document.querySelector('button[type=\"submit\"]');\n\nsubmit.addEventListener('click', submitPromise);\n\nfunction submitPromise(e) {\n  e.preventDefault();\n\n  if (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    Notiflix.Notify.warning(\n      'Por favor ingrese un valor correcto en todos los campos'\n    );\n  } else {\n    for (let i = 0; i < Number(amount.value); i++) {\n      let delayIncresing = Number(delay.value) + i * Number(step.value);\n      createPromise(i + 1, delayIncresing)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","value","$parcel$interopDefault","Notify","warning","i","Number","delayIncresing","then","delay1","success","console","log","catch","delay2","failure"],"version":3,"file":"03-promises.49bb7189.js.map"}